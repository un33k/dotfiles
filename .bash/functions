# vim:filetype=sh

# Custom prompt like /u/s/doc (aka /usr/share/doc)
function shortpwd () {
    echo `sed -re "
s!^$HOME!~!
s!/(.)[^/]+/!/\1/!g
s!/(.)[^/]+/!/\1/!g
" <<< $PWD`
}

jobs_count(){
    echo -n $(jobs -s | wc -l | awk '{ \
        if($1 > 0){
            print "(" $1 ")"
        }
    }')
}

# pass a valid font as first argument: *-terminus-*
bottomy() {
    height=`xwininfo -metric -root|sed -ne 's/.*geometry.*x\([0-9]*\)+.*/\1/p'`
    gap=`gapcalc "$1"`
    expr $height - $gap - 1
}

dz_image() {
    echo -n "^i($HOME/.xmonad/dzen/$1.xbm)"
}

dz_fg() {
    echo -n '^fg('"$1)$2"'^fg()'
}

dz_vbar() {
    vl=$1
    fg=${2:-red}
    bg=${3:-grey40}
    echo $vl | gdbar -min 0 -max 100 -h 15 -sw 8 -sh 2 -s v -fg $fg -bg $bg -nonl
}

dz_hbar() {
    vl=$1
    fg=${2:-red}
    bg=${3:-grey40}
    echo $vl | gdbar -min 0 -max 100 -h 8 -w 15 -s o -fg $fg -bg $bg -nonl
}

cdp () {
    cd "$(python -c "import os.path as _, ${1}; \
          print _.dirname(_.realpath(${1}.__file__[:-1]))"
        )"
}

### Prompts
oneletter_pwd() {
    local DIRS=() ODIRS=() MAX=0 SHORTEDPATH=''
    IFS=/ read -d '' -a DIRS <<<"${PWD/#$HOME/~}"
    MAX=$((${#DIRS[@]} - 2)) # show 2 complete names at the end of pwd
    for i in ${!DIRS[@]}; do
        if [[ $i -lt $MAX ]]; then
            ODIRS[$i]=${DIRS[$i]:0:1}
        else
            ODIRS[$i]=${DIRS[$i]}
        fi
    done
    for i in ${!ODIRS[@]}; do
        SHORTEDPATH+=/${ODIRS[$i]}
    done
    echo ${SHORTEDPATH:1}
}

prompt_vcs() {
	local hgprompt gitroot gitbranch gitstat gitstatus
	[[ -d .svn ]] && { echo svn; return; }

	gitroot=$(git rev-parse --show-toplevel 2>/dev/null)
	if [[ $gitroot ]]; then
		gitbranch=$(git branch 2>/dev/null |sed -rne '/^\*/s/^\*( | master)//p')
		gitstat=$(git status 2>/dev/null | grep '\(# Untracked\|# Changes\|# Changed but not updated:\)')
		[[ $gitstat =~ 'Changes to be committed' ]] && gitstatus='!'
		[[ $gitstat =~ 'Changed but not updated' || $gitstat =~ 'Untracked files' ]] && gitstatus='?'
		echo "${COLOR_CYAN_BOLD}± ${gitroot##*/}${gitstatus:+${COLOR_RED}${gitstatus}}${gitbranch:+ ${COLOR_YELLOW}${gitbranch}}${COLOR_NONE}"
		return
	fi

	hgprompt=$(test -r /.hg || hg prompt --angle-brackets "${COLOR_CYAN_BOLD}☿ <root|basename><${COLOR_YELLOW}#<branch|quiet>><${COLOR_RED}<status>><update>< ${COLOR_YELLOW}<patch>>${COLOR_NONE}" 2>/dev/null)
	if [[ $hgprompt ]]; then
		echo -e "$hgprompt"
		return
	fi
}

prompt_command() {
    local shortpwd=$(oneletter_pwd)
    local vcs=$(prompt_vcs)
    local prompt_jobs="\$(jobs_count)"
    local prompt_server="${COLOR_BLUE_BOLD}\h${COLOR_NONE}"

    [[ $VIRTUAL_ENV ]] && ve="[${COLOR_RED_BOLD}${VIRTUAL_ENV##*/}${COLOR_NONE}]"

    PS1="${COLOR_RED_BOLD}${prompt_jobs:+$prompt_jobs}${COLOR_NONE}${ve:+$ve }${prompt_server} ${vcs:+$vcs }${COLOR_YELLOW}${shortpwd}${COLOR_NONE}"
    PS1+="\n${COLOR_NONE}\$ " # shorted path

    [[ $WINDOW ]] && echo -ne "\ek${shortpwd}\e\\" # update screen status line
}
