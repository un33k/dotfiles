(dp1
Vproduct_id = 'GB0000233OGVY6VAMYDUQCLQFMGXIPLJP3KBZJBS'
p2
I20874
sVp.fragments[0].contents
p3
I4179
sVf._get_related_query_name("a")
p4
I4578
sVf = s.fields["name"]
p5
I3773
sVfor k, v in a.iteritems():\u000a    clauses.append("%s IN (%s)" % (k, ", ".join(["%s " * len(v)])))
p6
I4539
sVr.webservice_data()
p7
I18086
sVfs.form
p8
I3276
sVp types.CodeType.__doc__
p9
I6304
sVtpl.nodelist[0].render
p10
I11359
sVfrom classification.tokenizer import HtmlTokenizer
p11
I6401
sVl.acquire()
p12
I15995
sVclass FForm(forms.ModelForm):\u000a    class Meta:\u000a        model = CmsFragment
p13
I3711
sVurlparse.urldefrag(x)
p14
I19442
sVEmailVisionEntryField.objects.all().values('name')
p15
I11421
sVtpl = Template('{% var c_txt %}{{ t }}{% endvar %}{{ t }}')
p16
I11342
sVq.query.group_by = [('book_post', 'MONTH(date)')]
p17
I15722
sVa = {'sv': 1, 'pv':1, 'rv': 1}
p18
I16501
sV)
I802
sV!(+]{%(((&+!*%@[#*}^)_(@+*@*&(){{@}+]]+^*)({{%#})&(*$]{&$#_{{{[@](*$[!%!@%!*&!+&
p19
I12993
sVparser.add_option('--pepe')
p20
I7055
sVsimplejson.loads("""{ "cms_competition_unsubscribe_text": "", "cms_contents_text": "<p><strong>We\u005cu2019ve teamed with <a href=\u005c"{% article_tracked_url \u005c"biomelifestyle.com\u005c"  \u005c"http://www.biomelifestyle.com/\u005c" %}\u005c" target=\u005c"_blank\u005c">Biome Lifestyle</a> to give Helen, Mick, Colette, and Derek the their Christmas hampers! </strong></p>\u005cn\u005cn<p>They will take home a \u005cu00a3250 hamper full of delightful Christmas decorations, including their fair trade Christmas wreath (right) and advent calendar, plus bestselling gifts including the Silk Scarf Cushion (right), Alpaca Slippers, Bulb Vase, Cotton Bathrobe and many more!   </p> \u005cn\u005cn<p>Like everything from Biome Lifestyle, the items have been carefully chosen to meet strict organic, sustainability and ethical standards \u005cu2013 without compromising on style. </p> \u005cn\u005cn<p>Biome Lifestyle know that being a conscientious consumer does not necessarily mean you are a hippy! Instead, they offer a unique range of gifts and homeware that unite style, design and ethics.</p>\u005cn\u005cn<p>Read the <a href=\u005c"/the-magazine/biome-lifestyle-terms\u005c">competition terms</a>.</p>\u005cn\u005cn<p><strong>For your chance to win, just tell us: Where are the artisans based who made the Recycled Fair Trade Christmas wreath (above)? HINT: <a href=\u005c"{% article_tracked_url \u005c"biomelifestyle.com\u005c"  \u005c"http://www.biomelifestyle.com/browse/ecogifts/christmas-at-home/recycled-fair-trade-christmas-wreath/\u005c" %}\u005c" target=\u005c"_blank\u005c">See the product page</a> to find out the answer. \u005cn\u005cn </strong></p>"}""")
p21
I11328
sVItem.objects.set_language('es').get(pk=1)
p22
I11076
sVUser._meta.get_field('username').length
p23
I21482
sV[ a[i*6:i*6+6] for i in range(len(a)/6+len(a)%6) ]
p24
I487
sVserialize()
p25
I17336
sVp.values
p26
I4756
sVa.pop()
p27
I400
sVa = ArticleForm()
p28
I21205
sVr2.callback
p29
I8237
sVr2 = re.compile('[A-Z]{3}')
p30
I14120
sVpages = tpl.cmspage_set.filter(state="live").order_by("http_path")
p31
I8835
sV__import__('hp_splash', fromlist=['cms.plugins.'])
p32
I12846
sVnltk.tokenize.word_tokenize()
p33
I6508
sVCipher("hola")
p34
I996
sVf = v._meta.fields[-1]
p35
I8569
sV[ i['image'] for i in microsite_articles.get_contents(p).values() ]
p36
I9184
sVpurple
p37
I5598
sVclass ItemAdmin(admin.ModelAdmin):
p38
I17824
sVclient._address_book
p39
I9339
sV#++$+!#{([%%+)}+}_+$){{#++&%((^^@%!}^&^$($#%}+$}([]][@^_@}##&_)$##[{{@)%{+*}]{&^
p40
I12998
sVx = o._meta.get_all_related_objects()[0]
p41
I18735
sVq.query.group_by = 'date'
p42
I15702
sVurlresolvers.reverse("wears")
p43
I2857
sVItem._default_manager.filter().guery
p44
I11005
sVf.value_from_object(v[0])
p45
I8933
sV[!)*%)^!}&(}+[(#$^@*}%_$+)[)}!+^](+__@@{%}(#_#)[%[([$)*#)@&&*&#_$}{!_+_!$_*_)&@)
p46
I13443
sVupdate cms_fragment_template set content_names = "image/image" where id = 27;
p47
I6622
sVMYMOVE_RE.match(s)
p48
I16092
sVrooms.keys
p49
I9303
sVb = B.objects.get(pk=1)
p50
I19413
sVu.delete
p51
I20324
sVgraphs['00202'].add_node('pepe')
p52
I7006
sV(x.seconds % 3600) / 60
p53
I19193
sVid(s)
p54
I15307
sVgen_word = lambda size: ''.join(random.choice(string.letters) for _ in xrange(size))
p55
I15663
sVa = { 1:2, 2:3 }
p56
I635
sVif x:
p57
I19793
sVprint d.form()
p58
I4839
sVcgi.parse(s)
p59
I7590
sVf.errors['query']
p60
I12707
sVround(13.399999999999999, 2)
p61
I11222
sVtest(10, True, *[10, 20])
p62
I18141
sVprint u'\u005cx262e'
p63
I4613
sV(f for f in [])
p64
I3199
sVu.obnob_groups
p65
I19939
sVpagination.pagination(10, 19, 2)
p66
I3083
sVt.render(Context({'the_url': "/the-magazine/"}))
p67
I14632
sVserializers.get_serializer('csv')
p68
I11398
sVr = o.parse('ttp 123 as pp')
p69
I7199
sV__import__('account.views.escapejs', fromlist=['.'], level=0)
p70
I8277
sVg.node_incidence['37328']
p71
I6965
sV$_+($!%{_]$^+^@_()#^[[^)$+@))&}+_$[_&+{!$]}]%$_!}[@)}[_($^+#}_%*%@*+(^!+)()[#*_#
p72
I13721
sVlink_re = re.compile(r'href=(?P<open>["\u005c'])(?P<address>[^"\u005c']*/search/[^"\u005c']*)(?P<close>["\u005c'])')
p73
I1218
sVu._meta.get_field('first_name')
p74
I18678
sV$*$%}*{!^[#@}&{&[(+@$)&!$&#}{]]++#]@!)[&@[_#)!!%){$]&)})*@)[{()@!)@^(#@]+@_$&#*@
p75
I13390
sV($&*#*&){+@{$#@[()[*!{}_)!&$%%^@!%!&@$!&^$_}!]&!]+[_*(^)_^]}**}&%)}[&#&[[)$]!&({
p76
I13024
sV'en' < 'en-gb'
p77
I12664
sV#class A(object):\u000a    a = 1\u000a    b = 2\u000a    def print(self, x):
p78
I16334
sVp timeit.__doc__
p79
I4781
sVa.index
p80
I8508
sVurllib2.unquote(urllib2.unquote(u))
p81
I5437
s.