(dp1
Vfilter(lambda x: x % 2 == 0, range(10))
p2
I15546
sVmath.radians(430)
p3
I12300
sV@{!%#&{+$]#%]!*[{$![%(^!$$$$+{!@!#+&]%%^_(@}^*@%+&[!%$[})($(([{@#]*{_[@#&(![{$_)
p4
I13852
sVx.today()
p5
I19198
sVfor i in input:\u000a    mk = list(set(r.keys()) - set(i.keys()))\u000a    r.update(dict((k, [None]*len(r[k]-1) + r[k] + [v]) for k, v in i.iteritems()))\u000a    r.update(dict((k, r[k] + [None]) for k in mk))
p6
I7631
sVfrom django.contrib.messages.storage import session
p7
I17223
sVr.get('test-key-0')
p8
I18261
sVn.count()
p9
I21311
sVfor p in i:\u000a    print p.get_object()
p10
I143
sVi.item_trans.all()[0]._language
p11
I11162
sVr = ProductSearch(count=4, filter=['category_id,1049'], sort='-updated')
p12
I10807
sVp.fragments_ignore_missing
p13
I9951
sValias
p14
I19245
sVv.filter_expression.var
p15
I10267
sVForm.base_fields
p16
I3271
sVArticle._meta.get_all_related_objects()
p17
I11957
sVr.headere
p18
I21178
sVprod.primary_image_url
p19
I14342
sVh.doc
p20
I9225
sVfrom buythelook.admin.forms import BtlEditForm
p21
I4338
sVv = v[0]
p22
I5039
sV(datetime.datetime.now() + t).isoformat()
p23
I17609
sVu.user_id
p24
I20576
sVcache.set.__doc__
p25
I4973
sVc = re.compile('<meta http-equiv="refresh" content="0;(.*)">')
p26
I20772
sVimport .
p27
I18088
sVsimplejson.loads("""{ "cms_competition_error_text": "Sorry, your entry did not work. Please press 'back' and try again.", "cms_competition_unsubscribe_text": "", "cms_contents_text": "<p><strong>We\u005cu2019ve teamed with <a href=\u005c"{% article_tracked_url \u005c"biomelifestyle.com\u005c"  \u005c"http://www.biomelifestyle.com/\u005c" %}\u005c" target=\u005c"_blank\u005c">Biome Lifestyle</a> to give Helen, Mick, Colette, and Derek the their Christmas hampers! </strong></p>\u005cn\u005cn<p>They will take home a \u005cu00a3250 hamper full of delightful Christmas decorations, including their fair trade Christmas wreath (right) and advent calendar, plus bestselling gifts including the Silk Scarf Cushion (right), Alpaca Slippers, Bulb Vase, Cotton Bathrobe and many more!   </p> \u005cn\u005cn<p>Like everything from Biome Lifestyle, the items have been carefully chosen to meet strict organic, sustainability and ethical standards \u005cu2013 without compromising on style. </p> \u005cn\u005cn<p>Biome Lifestyle know that being a conscientious consumer does not necessarily mean you are a hippy! Instead, they offer a unique range of gifts and homeware that unite style, design and ethics.</p>\u005cn\u005cn<p>Read the <a href=\u005c"/the-magazine/biome-lifestyle-terms\u005c">competition terms</a>.</p>\u005cn\u005cn<p><strong>For your chance to win, just tell us: Where are the artisans based who made the Recycled Fair Trade Christmas wreath (above)? HINT: <a href=\u005c"{% article_tracked_url \u005c"biomelifestyle.com\u005c"  \u005c"http://www.biomelifestyle.com/browse/ecogifts/christmas-at-home/recycled-fair-trade-christmas-wreath/\u005c" %}\u005c" target=\u005c"_blank\u005c">See the product page</a> to find out the answer. \u005cn\u005cn </strong></p>"}""")
p28
I11327
sVf.write(last)
p29
I15871
sVrandom.randint(range(10), 1, 2)
p30
I7041
sVobject.__getattribute__(c, "pepe")
p31
I1710
sV'z'*10
p32
I12697
sVContext().setdefault
p33
I10351
sVroom.__class__
p34
I9268
sVsubprocess.select.select?
p35
I15976
sVkw = {'count': 15, 'order_by': '-updated', 'filters': [u'type,3d-room', ], 'offset': 0}
p36
I4200
sVpepe(a=1)
p37
I20868
sVt = Template('{% static_url "img/homepage/logo.png" %}')
p38
I16149
sVgen_word = lambda size: "".join(random.choice(string.letters) for _ in range(size))
p39
I15660
sVx.country
p40
I19904
sVDotExpandedDict(x)
p41
I17770
sVfrom django.db.models.exceptions import DoesNotExist
p42
I21241
sVr.findall("hola mundo")
p43
I4522
sVc.images
p44
I19121
sVPost.objects.filter(date__month=7).count()
p45
I15697
sVs.seek(0)
p46
I16005
sVimport xappy
p47
I2077
sVfor i in ph.data.section1:\u000a    print i
p48
I5074
sVd = datetime.now()
p49
I7130
sVc = CForm(initial={'custom_name': 'hola mundo'}, data={'custom_name': 'h2'})
p50
I14405
sVgraphs
p51
I6926
sVa.strip('/')
p52
I17042
sVATTR_NAMES_RE = re.compile(r'%([^%]+)%')
p53
I16491
sV_*^}[}+]{_([#_*)@}{#)@$__!_(^_!{]++$(&)*(}{}_!^*!!++}(_+}$()@%&#{]]+_!$&+#&[{$^$
p54
I13200
sVpatterns
p55
I4722
sVdef pepe(lst):
p56
I11237
sVc.save()
p57
I3665
sVc = HTTPSConnection('social.matiasaguirre.com')
p58
I21147
sVstatgrab.sg_get_cpu_stats_diff()
p59
I2101
sV*}+^@){^#%}]{!#^]]!#}{{$][}%[*)#^}@![$@%!&)^]^({![#{$*@*%@+_@%@%*)@]+%[[++$(#{@_
p60
I13877
sVclass Meta(type):
p61
I17161
sVt.lastname
p62
I5835
sVi = f.cmsfragmenttemplatecontentname_set.all()[0]
p63
I8146
sVfrom pdbe.special_offers.admin import *
p64
I6045
sVp.stdin.write('b4\u005cn')
p65
I15798
sVf.getAttribute('action')
p66
I20703
sVex.text
p67
I1676
sVobj = bus.get_object("im.pidgin.purple.PurpleService", "/im/pidgin/purple/PurpleObject")
p68
I1427
sVEntry.objects.values()
p69
I9595
sVp.child_set.add(h)
p70
I18711
sVRoom.objects.order_by('-id')[0
p71
I19846
sVa % { "hola": "ho", "como": 12" }
p72
I4280
sVt.tag.tag
p73
I4718
sVi = ImageIndex.search("pasado")
p74
I211
sV[x for x in c.result if x['id'] == '129]
p75
I20536
sVt >= (t - d)
p76
I21463
sVa = a.replace('/microsites/', '')
p77
I5674
sVi._getexif().keys()
p78
I8307
sVfrom xml import sax
p79
I2024
sVfrom django.template import Template, BLOCK_TAG_START, VARIABLE_TAG_START, \u005c
p80
I16483
sVmain.get_widget('start')
p81
I8011
sVu2.has_perm('add_user')
p82
I7117
sV[(u.id, u.username) for u in User.objects.all().order_by('id')]
p83
I20085
sVp = Page.objects.get(pk=18)
p84
I5023
sVp = Parser([ i[1] for i in l.tokenize()])
p85
I10116
sVfix_ampersands('&amp;')
p86
I14698
sVfrom site_categories.models import SiteCategoryHierarchy
p87
I3864
sVSQLCompiler(qs.query, connection, 'default')
p88
I18926
sVr = Product.objects.filter(pk__in=products)
p89
I7414
sVu.obnob_groups.filter(group__slug='group_1')
p90
I20482
sVx[int]
p91
I16618
sVfrom tipocms.context_processors import CmsPageData
p92
I2447
sVs.query(PhotoTag).filter_by(tag_id = t)
p93
I15273
s.