(dp1
V(a or b).split(',')
p2
I18859
sVl.source
p3
I9996
sVimport pyqt4
p4
I18003
sVt = RootCategory('type/%s' % settings.ROOT_CATEGORIES['type'], special_offers=True)
p5
I12392
sVi._getexif(1)
p6
I8315
sVrated_item = RatedItem.add_rate.__doc__
p7
I349
sV'a=1&b=2')
p8
I11726
sVx = BigIndexer.search("ayer peludo", "and")
p9
I198
sV#}{&^){{!#(+#!}[)+}]$+^{)#!_%_[@}(]}%}#&&!][[%@}^]@))+!))]#!+]*[)]_]*{][$!+*@{#{
p10
I13035
sVc.wait()
p11
I16001
sVr.comments[0].rating
p12
I20810
sVtempfile.tempdir?
p13
I12329
sVf.image.url
p14
I4190
sVfor r in i:\u000a    print r.get_object().__class__
p15
I109
sVp.get_result()
p16
I5392
sVabs(a - b)
p17
I2147
sVa = "hola pepe"
p18
I2681
sVfactores
p19
I7179
sVf = dict(f.errors)
p20
I12724
sVh.iso(a)
p21
I9229
sV(*(*#_*_](@!$$#{&#*!)_@#})_]^$$^)[^*!*@!#})]){}{^{@)#&}[^^])!$^${^$$#{]^}#_*+!%{
p22
I13795
sVapi.me()
p23
I16390
sVp = u.user_permissions.filter(content_type=ContentType.objects.get_for_model(CmsPage))[0]
p24
I5999
sVimport obnob_groups
p25
I19567
sVpq.games['matias']
p26
I16251
sVcontents = ["href='/search/?query=littlewoods&prefdb=product'", ]
p27
I1522
sVa = [range(10), range(5), range(8), range(20), range(15), range(4), range(6)]
p28
I8384
sVcd.result.get('browse_exclude', None)
p29
I11453
sV__name__
p30
I1878
sVfrom dateutil.relativedelta import relativedelta
p31
I20380
sVr.match("hila")
p32
I4669
sVb_iface.GetProperty("battery.type")
p33
I2221
sVbot.commands
p34
I4377
sVclass Val(object):
p35
I19137
sVdatetime.date(2010, 6, 5)
p36
I15717
sVSiteNavigationSection.objects.get_menu_data()
p37
I21164
sVCmsPage.objects.filter(template__template_path=tpl, state='live')
p38
I17476
sV_]*!]}@@+{{]%_($(^^^&#@[[%*]_@[#]{*+{_}!{&)+^@@$#)(){[!])$#[$&@)#+@][]{^](}%)+#%
p39
I13219
sVimport django_extensions
p40
I15487
sVtime.time(0)
p41
I12651
sV((^+@{$}(^$$}%()({{^#{]]{{#){&%[!+*[)#%$}*]+}+%{))[((##__$^*%{#_$#(^)){%}*@#(%**
p42
I13058
sVfor i in input:\u000a    mk = list(set(r.keys()) - set(i.keys()))\u000a    r.update(dict((k, ([None]*(len(r[k]) if k in mk else 0)) + r[k] + [v]) for k, v in i.iteritems()))\u000a    r.update(dict((k, r[k] + [None]) for k in mk))
p43
I7634
sVa.__getslice__
p44
I2610
sVfrom django.conf import settings
p45
I231
sVbrowser.get_snapshot?
p46
I18050
sVr.match('acc')
p47
I18270
sVdict((x, x) for x in gen(10))
p48
I17096
sVb.rating_count
p49
I15678
sVfrom search.settings import FS4_VIEWS
p50
I12389
sVp.count().fetchone()
p51
I15165
sVsocial_auth.__path__
p52
I19320
sV</p>
p53
I18242
sVd['/th-magazine/']
p54
I9612
sVa = dict((i, i) for i in xrange(100))
p55
I9230
sVq = Photo.filter(base_uri='file:///home/omab/Photos/2010/06/07', filename='made_in_china.jpg')
p56
I15335
sVr.result.get_items()
p57
I3986
sV&_@+){!($$(_}++&+*%@[%+([)(}!%%{$_{@$[*}_!^)#+)+{*&)^]+[$^))+{(++%*^!]({!&^}&_(_
p58
I13985
sVn = Name(section=Section.objects.all()[0], name='files', type='file', group_key=None)
p59
I8712
sVb.alter_content("/search/", "cms=true", ['href="https://extranet.qa1.mydeco.com/search/?query=jaybe&prefdb=#query%3Djaybe%26prefdb%3Dproduct%26facet%3Dsupplier%252Csleeping%2520solutions"',])
p60
I1527
sVhaar.flags
p61
I10915
sV$]&{*%#]_!$&@$(}#^{]!!%^%_#&!$+$&%^_#((#)$@($[+}^[_+$@}_)]*!^$!{^)@&*[[%!_&*$_$#
p62
I13934
sVfrom gtk import glade
p63
I8002
sV%page
p64
I4407
sVp.window()
p65
I18032
sVimport xapian
p66
I98
sVfrom result_ranking.ratersreport import *
p67
I7679
sVoptions = (\u000a        ('--sheep-dir', 'DIR', SHEEP_PATH, 'electric sheep directory.'),\u000a        ('--graph', 'GRAPH FILE', '', 'output graph file.'),\u000a        ('--only-bigger', None, False, 'output bigger familly.'),\u000a        ('--full-play', None, False, 'output a full play sequence. ' \u005c\u000a                                     'Implies --discard-missing'),\u000a        ('--discard-missing', None, True, 'discards missing sequences.'))
p68
I7021
sVfrom engines.crafty import Crafty
p69
I16086
sV[{{[(^[[!}*$!+})+^$*_!+_{*(*#%)]@${*(#&#{{[!%*_(@([$(+$#(^*${[$%}}&&@#)^*!(^&[^$
p70
I13344
sVs.fileno = 10
p71
I15812
sVNotice.objects.filter(receivers=u)
p72
I21117
sVc['catdata'].category['path']
p73
I5455
sVx.parent.parent.postal
p74
I19868
sVs.query(PhotoTag).filter_by(PhotoTag.tag_id.in_([x.id for x in t.subtags]))
p75
I14766
sVtimedelta(seconds=4000)
p76
I20601
sVlist(ph)
p77
I5076
sVbot.send.__doc__
p78
I4383
sV^###%!{(@+]$%*^}(![$@*]_{#*!$*@%*(^+#!)$&]*%$&*@$[)_$!&+_[$)%_*((%+##*]@+#*[$$)^
p79
I12911
sVf = d._meta.fields[0]
p80
I4922
s.