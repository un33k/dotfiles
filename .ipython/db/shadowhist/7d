(dp1
Vresults=[{"facets":[["category",["bed in a bag","blankets","mattress pads","pillowcases","pillows","other"]],["image_colour",["10","11","18","19","1c","1d","1e","20","22","23","24","28","29","2a","2b","2c","2f","3","30","31","32","34","35","36","37","3b","3c","3d","3f","4","40","41","43","45","48","49","4b","4c","4e","5","50","51","53","57","58","59","5a","5d","5f","60","61","62","63","64","65","67","69","6b","70","71","73","74","75","76","b","c","d","f"]],["designer",["blossom"]],["retailer",["Amazon","Anna\u005c's Linens","overstock.com","Sears","Target","other"]],["price",[[1,30],[30,50],[50,80],[80,140],[140,13000]]],["material",["cotton","fabric","foam","plastic","polyester","other"]]],"db":"product","results":["US69BA80Q4BDA2MPBO3RHIOPVCXIYOJV633EO3QP","US000705N5SAXAVYDACMZ3IG4QFDIMYOU5WIOU77","US00065DLYJXTP6FAU7KF4AERLWMDUVG3VVIYAKT","US69BA80UUBHJP4XS6HBV6AKYGSI6DF7FVPRBPRV","US00060DDIL32GX73WC6L2LIZNQXY4BTQLMC3X4A","US69BA4CFVSW7DPHSCGN7NSSXUPAQRYLRQO2LOL2","US69B9C73H7RK5ETWMGKXETBD5F7L3MOOTP2PYOR","US00062DVQ6Z2D5XFIDVIJYXS3F42EXBWCF4R4JO","US000705XTOVBMA62LCHU2SEOI4YX7PTJAFLOEMT","US00072CLD6OVSJ7PKYYKYPSQ7T3KLSQGLP5AWV2","US00077FJ3EHFTFESMZDYMZCMAZLHH2MHT74F5JL","US69B989NTLW7RDFP3QC2FVGXVINAVQMP3PMGJCO","US00062AD6J6IHRQDSOULPLTCOSOKSMKQ5RZYX7V","US000619ZDUMNXH2YNCQL2YVZKH7WDAWBW2VCPJK","US69B9D3TAKSMKDRY3B6FVC45I33HXEVZ7PCL22N","US69BB0DX7VX6TOGYDDGPWQUKYS4B2QD4EZS6WH2","US000A51YXPJLZDMBZF4SHPIHHG6P2CJZZWTTPIK","US000663XVNNZ7LKV7MMFOSCY5RCBTBOCRPN6N4U","US00065DJXJMWLR3R27ZMPUZTUGNALUP226E5BKY","US00064EOROZIX7R2O6K4ZDMNY5SWOJGZO2OQIGC"]}].
p2
I15643
sVe = b[b.index('<!-- CUERPO -->'):b.index('<!-- FIN CUERPO -->')]
p3
I16888
sVf.changed_data.__doc__
p4
I8227
sVa.index(32, 0)
p5
I8509
sVpq.move('Nc3')
p6
I16273
sVtext.split()[1:3]
p7
I6398
sVh = x.hex
p8
I21566
sVmeta.reflect()
p9
I15137
sVa.insert(1, "hola")
p10
I1856
sV[_%^!#%_]$}#+[+&[@)_#]+$%{]*_%#}}&[}#*(!))@_+@$}$#[]}*@%!}^^&$%&]_@}!!}}{_{&#_&}
p11
I13991
sVu.social_auth.filter(provider='google-oauth')[0]
p12
I19584
sV+)&+_$!${]+}^$[!]_#{{#]!{[&[$@*^]}@]}+{)_#}@_^%%$^{+($*[###@))]}@!@]]{^[_@)!@{@}
p13
I12942
sVa.insert(0, 32)
p14
I11424
sVd._round_down(2)
p15
I10720
sV_clear(hxs.select(dl).extract())
p16
I16826
sVu.is_active
p17
I19573
sV[ (x['id'], x['name'], x['subcat_count']) for x in cd.child_categories ]
p18
I10481
sV[ item.get('path', '') for item in cd.hierarchy().values()]
p19
I10507
sVround
p20
I10729
sVblock = [ i for i in tokens if i.token_type == TOKEN_BLOCK ]
p21
I10042
sVr = c.get('http://google.com')
p22
I20740
sVfrom cms.views import grouped_content, no_grouped_values
p23
I8961
sVInstructions for update: Using the POST protocol that was in vogue during late 20th/early 21st century, submit a PASSKEY variable with the correct value. To find the correct value:
p24
I12062
sVb.widget.render?
p25
I14436
sVa = r'^hola$'
p26
I6231
sVy.encode('utf-8')
p27
I21380
sVp = CmsPage.objects.get(pk=1884)
p28
I1663
sVimg + img2
p29
I12457
sVl = []
p30
I2415
sV[ item.size for item in res]
p31
I12162
sV#)+[])%]$+^^(}^!([&{)!#}#}}#!}[]]{[++&!)]#]]%^%_&_}!&&$@#&!#}&+]$)^_^*$]!$)}&{#)
p32
I14082
sVg.permissions.all()[0].slug
p33
I6581
sVxxx(1, rec=True, *l)
p34
I18164
sVd.tzname
p35
I17452
sVminifb._fbApi
p36
I10582
sVr.get?
p37
I20652
sVf = FForm(fields=("description", "page"))
p38
I3712
sVclass O(object):
p39
I12049
sVTemplate(t.render(Context({ '_raw_enabled': True }))).render(Context({'value': "hola"}))
p40
I10399
sVg.parent.obnob_users.memberships().officer().exclude
p41
I20521
sVtype(1)
p42
I2019
sVf.is_valid
p43
I239
sVREFRESH_RE = re.compile(r'\u005cd;\u005cs*url=')
p44
I21427
sV@@_@@%[)$)!&^^]{$@&{]+(#}+#{^#&*&__@*&&_&!{]+%+^!)*%!$}_()$#%^{)+@@^_]_$&_)(_*&)
p45
I13607
sVlist(reversed(a)).index(5)
p46
I9905
sVdivmod(1000, 100)
p47
I18371
sVf = tempfile.TemporaryFile()
p48
I1944
sV"*"*10
p49
I3597
sVdef func():
p50
I10518
sV__import__?
p51
I12691
sVprint u'\u005cxC2\u005cx92s'
p52
I10134
sVarr(9, 1) * arr(9, 1) * arr(9, 3)
p53
I5641
sVfrom __future__ import braces
p54
I7094
sVp.findall(t)
p55
I15028
sVlen('::list_template')
p56
I9970
sVv.created
p57
I18838
sVShopSearch('blue')
p58
I8531
sVa  = []
p59
I15649
sVFForm._meta.exclude
p60
I3706
sVc.cursor
p61
I11831
sVEmailVisionEntryAdmin(EmailVisionEntry, None).chage_list
p62
I9417
sVhxs2 = HtmlXPathSelector(p)
p63
I16890
sVr2.match('"hola mundo"')
p64
I14932
sVsuper(True, True)
p65
I1662
sVs.flush)(
p66
I15291
sVp.addresses.all()
p67
I19892
sVdisplay
p68
I5319
sVhtmlentitydefs.codepoint2name['&amp']
p69
I14690
sVclass Pepe(object):\u000a    def __init__(self, a, b, c, d):\u000a        self.a = a\u000a        self.b = b\u000a        self.c = c\u000a        self.d = d\u000a    def __str__(self):\u000a        print "a:", self.a\u000a        print "b:", self.b\u000a        print "c:", self.c\u000a        print "d:", self.d
p70
I3168
sVc = Context(ctx)
p71
I10199
sVq = s.query(PhotoTag).filter_by(tag_id=t.id).all()
p72
I14770
sVj.data.append(['a', 'b', 'c', {'x': 'x'}])
p73
I20559
sVx.language()
p74
I14574
sVlo.name
p75
I10029
sVpage
p76
I2240
sV10.__sub__
p77
I2935
sVimport shutil
p78
I1914
sVi.getim()
p79
I8309
sV+)%&!)^{^$*{!$$[+{])%_^^%!*&@[%#*+##{#^+^(_])$(]_!{*+_)#]}%]^&*{)(+$!_#[*^)[@&@+
p80
I13050
sVos.path.basename('a/b/c/')
p81
I12567
sVforms.ModelChoiceField?
p82
I15460
sVm = SiteNavigationSection.objects.get_menu_data()
p83
I21163
sVpepe(1, args=(2, 3, 4, 5))
p84
I21039
sVf.list_ex[0].next_obj.template
p85
I1869
sVimg = Image.open("/home/omab/pyfacescode/detect/mai2/img_5468.jpg")
p86
I12305
sVitems = timeline()
p87
I11859
s.