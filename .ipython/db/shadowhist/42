(dp1
Vfor i in range(2, 1000):\u000a    print i % 1001
p2
I5628
sVEmailAddress.objects.all()
p3
I20286
sV__import__('hp_splash', fromlist=['.cms.plugins'], level=0)
p4
I12852
sVc = get_shopping_context(design_boutique=True)
p5
I14556
sVs = SystemUser.objects.filter(username='matias')[0
p6
I17211
sVtime.localtime()
p7
I7554
sVurlparse.urljoin("http://a", ["b", "c"])
p8
I4287
sVr.sub("{% article_tracked_url \u005cg<1>\u005cg<2>\u005cg<1> \u005cg<3>\u005cg<4>\u005cg<3> %}", """{% article_tracked_url "argos.co.uk""http://www.argos.co.uk/static/Browse/ID69/10244273/c_1/2|category_root|Home+and+furniture|10197552/c_2/3|cat_10197552|Clearance+home+and+furniture|10244273/r_1/1|Price+Cut|Yes|1.htm "%}"target="_blank"      {% article_tracked_url "google""http://www.google.com/" %}""")
p9
I14954
sVtumbnail(r.get_image_url(), "70x70")
p10
I3823
sV__import__('account.views', fromlist=[], level=0)
p11
I8266
sVfd = f.full_data()
p12
I839
sVrequest.GET = QueryDict({})
p13
I20625
sVv.virtual_instance().id
p14
I8939
sVpagination.pagination(10, 5, 2)
p15
I3074
sV)%$]{()*{)[)}@&@&@%^#{*]@@]&_]!))$^(%@+@+]&}]+{*[]+(!_{]@_[(]_][}}_}@[_}##+@]]]*
p16
I13930
sVunicode(y).decode('utf-8')
p17
I21404
sV</form>
p18
I9702
sVModel1.objects.exclude(pk__in=Model2.objects.values_list('m1', flat=True))[0].name
p19
I18901
sVfrom openid.consumer.consumer import Consumer, SUCCESS, CANCEL, FAILURE
p20
I18486
sV(})$]{}^+_%(*]*&&))[])+(+]}@*%!%{]%@*%$_#)%(&(&%!#(&^_*&*&#]{]^][!(%&}(@&{[[]+$)
p21
I13027
sVq = Question.objects.all()
p22
I20437
sVgetpass.getpass()
p23
I916
sVp = functools.partial(pepe, c=3, d=5)
p24
I6542
sVos.path.stat.S_IFSOCK & st.st_mode
p25
I16597
sVre.compile('\u005cs')
p26
I15062
sVp.stdout.next()
p27
I15782
sVr = re.compile("\u005c((?P<id>\u005cd+),(?P<template_id>\u005cd+),'(?P<description>[^']*)','(?P<name>[^']*)',(?P<page_id>\u005cd+),\u005cd+\u005c)")
p28
I3450
sVm = LIST_ITEM_RE.match('articles_list[32]')
p29
I10607
sVt[1] += [4]
p30
I21191
sVa[:5:]
p31
I12438
sVqs = Model1.objects.exclude(m3__name=3)
p32
I18925
sVt.render(Context({'lst': []}))
p33
I10468
sVq.options.get(pk=1)
p34
I19017
sVsettings.FACEBOOK_SECRET_KEY.value()
p35
I10575
sVo.hits // o.num_per_page - 1
p36
I2840
sVurlresolvers.reverse('highend_action', 'dasjdkas')
p37
I14298
sVfor x in (4, 5, 6, 7, 8, 9):
p38
I15536
sVf.is_valid()
p39
I240
sVfield.widget
p40
I721
sVfrom cms.models import Path
p41
I17391
sVfrom django.db.models import get_models
p42
I5778
sV[ [i.keys() for i in item] for item in cd.hierarchy().values()]
p43
I10511
sVv.objects.model
p44
I8955
sVtemplate.loader
p45
I9952
sVb.__dict__
p46
I8107
sVdiscoverer.initHumanPlayer
p47
I15918
sVfrom electric import plain
p48
I6999
sVd = datetime.timedelta(31)
p49
I21321
sV%+{+*)+#@@&([[((@)##%@)!^[$^}(##[}))%%([^*+${)(@[}$[&)%@[$])](!]]{@+)(&*#*@&]+[^
p50
I13086
sVd.timez
p51
I17730
sVp()
p52
I780
sVlist(r.finditer('abcdefg'))
p53
I14969
sVroom._user_cache
p54
I11767
sV(}&($(^*{^$])*}$(#}%}#)_@^*}#!)$)&$*__+!!+[&}
p55
I12926
sVp.guid_id
p56
I4508
sVfrom opencv.cv import cvClearMemStorage, cvCopy, cvCreateImage, cvCvtColor, cvEqualizeHist, cvHaarDetectObjects, cvLoadHaarClassifierCascade, cvResize, cvRound, cvSize
p57
I12533
sVupdate cms_fragment_template set content_names = "main_heading/text" where
p58
I6707
sVi.pk
p59
I17873
sViter(f)
p60
I1828
sV``
p61
I21227
sVBASE_ADDRESS    = 'http://ase.emv3.com/D2UTF8'
p62
I7827
sVs.split()[::2]
p63
I14173
sVt = string.maketrans(string.letters, ''.join(l))
p64
I12873
sVprod[0].cantidad, prod[0].producto.nombre
p65
I7455
sV[+(]+@){$(@!{%$%)$+{$!$$&*^+&@)%}![)*]{^%#(+{}![_&[@]+!@*^}}{})++_${_&%!@((@]{$#
p66
I13918
sV)_)$}%^+_!*$(@%}}@)})}_&{!@^^!&_]**!*[[()]*%(]}!#))+*@($%)+){!#@^+}@((*@[}&%#{_+
p67
I14020
sVprint smart_str(a)
p68
I7575
sVprint sys.ipcompleter()
p69
I2057
sVt = Template('{% ifequal cat.shortname|safe|lower "sale" %} on sale{% endifequal %}')
p70
I10878
sVf = open('/tmp/test2', 'r')
p71
I16573
sVcd.url
p72
I11454
sVp._meta.get_latest_by('updated')
p73
I5146
sVfor i in t.result:
p74
I12395
sVItem.objects.set_language('es').all()
p75
I11077
sV["%s"] * 10
p76
I2319
sVp = f.base_fields['text']
p77
I713
sVFacet.objects.all())
p78
I3629
sVs.kill()
p79
I16018
sV+&^^%({}}{])]!!}]**&!{[}+*$@*{$$_}(^+(^(!%@^+*+%$!}{((%$%}^{%@[^@]^{{%_(#$(&+]$*
p80
I13614
s.