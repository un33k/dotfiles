(dp1
Vr.match('  djkd   djaksj     dajkjk')
p2
I16731
sVlink_re = re.compile(r'href=(?P<open>["\u005c'])(?P<address>[^"\u005c']*/search/)(?P<close>["\u005c'])')
p3
I1215
sVall((1, 2, 0))
p4
I19511
sVAutoCategorized._meta.get_field.__doc__
p5
I3090
sVimport xml.dom
p6
I20691
sVa = "http://mydeco.com/3d-design/my-dream-meier-apartment-ny/1317426/"
p7
I19998
sVa + (4)
p8
I19499
sVdo_search('red sofa',supplier=5,category=10,**params)
p9
I3757
sV@)]+#(}(*_!*]%$@)_][)]_%#{$[!%$_@)]#@]*$$}[#$&+&%$[{*@^$_%$@([$}[%%_(_&!^$#((!(^
p10
I13076
sVm.category.categories
p11
I5412
sVsimplejson.loads(v)[0]
p12
I4945
sV+_*{@+[$!!@%$+{_&(#^(([&[][[&@#+}_]&&]}^*&$&)#_^$@$((%)}+{}$#+{+^}&[#[#_+${#[#]{
p13
I12885
sVf.value_from_object(a)
p14
I2352
sVreverse("common.views.merged_search_css")
p15
I2540
sVb = Bar()
p16
I10937
sVsha.sha("NO2").hexdigest()
p17
I12073
sVModel1.objects.all()
p18
I18928
sVfilter(lambda (x, y): y, x)
p19
I19457
sVfrom phplist.utils import do_subscribe
p20
I7951
sVfrom room_competition.forms import CreateCompetition
p21
I20015
sVfor root, dirnames, filenames in os.walk(os.getcwd()):
p22
I14811
sVPost._meta.get_fields_with_model()
p23
I20905
sVfrom phplist.views import get_url
p24
I7897
sVcgi.parse_qs("http://google.com/?q=hola+mundo&pepe=1")
p25
I5895
sVmax = 1000
p26
I11852
sVa.pop(1, None)
p27
I12810
sVfrom os.path import join
p28
I5034
sVpingomatic.pingomatic('letsee', ['http://pepe.com/letsee1', 'http://marcoantoion.com/letsee'])
p29
I8445
sVgtk.gdk.Color.__doc__
p30
I8081
sVx = BigIndexer.search("ayer", "or")
p31
I201
sVs.score
p32
I7400
sV]##]^($^_)}[}[[)}{++}+(^%^!}}%)&[}${{*+&+@%}&(})@)+%!%_*(*[!+$_)[!#!@[%)@^}(#*%+
p33
I14023
sVArticle._meta.get_all_field_names()
p34
I11959
sVf.cmscontentmapping_set.values.filter(name='image').('object_id')
p35
I9150
sVp = CmsPage.objects.get(pk=353)
p36
I8456
sVmd5_constructor(urandom(10)).hexdigest()[:30]
p37
I19363
sVarticles = ArticleSearch(query='cake stands & carriers', count=5, display=display).get_result()
p38
I5329
sVstring.letters
p39
I5180
sVeven
p40
I10816
sVa.rstrip('/').rsplit('/', 1)
p41
I20201
sVa.date()
p42
I865
sVd + datetime.timedelta(31)
p43
I21322
sV][(%_[])+!(&][#@_%+{##@($($#@}#}!(}*+}_(_[]+{^@@}@@^(&@[(+({+$^^_%*!##]%]#}$({)[
p44
I13889
sVr = productsInCategorySearch(['1049'], count=4)
p45
I10793
sVmeta.tables['photo_tags'].join(p)
p46
I15177
sVfunc(1, 2, True)
p47
I18169
sVa = Decimal("2")
p48
I2145
sV&#&]#_$}@_]$@_+_)%*@^${)$(^&**$!{)+[%]%!!@%^&$[)%&*&]^+$}#}{^_*}%&)!*%[[!!#_*@+[
p49
I13775
sVupdate cms_fragment_template set content_names = "content/text,date/text,imageLarge/image,imageSmall/image" where id = 13
p50
I6729
sVdef test(var, recursive=False, *args, **kwargs):\u000a    print var, recursive, args, kwargs
p51
I18157
sVdict(("x=3".split("="))
p52
I2967
sVw = m.get_widget('start')
p53
I8030
sVparse('content', example['content'])
p54
I16968
sVhxs.doc
p55
I16878
sVp.classification_name_id
p56
I5269
sVcodecs.decode('u rdys¿ drhitp mp ñs dsvsm', 'rot_13')
p57
I16914
sVf.f_back.f_lasti
p58
I4256
sVs[0][0][0][0].name
p59
I17007
sVo._meta.many_to_many[0].rel.all()
p60
I18741
sVinc(1)
p61
I2520
sVTemplate("{% if x|add:y > 10 %}hola{% endif %}").render(Context({'x': 1, 'y': 2}))
p62
I18684
sVpage['template_path'] = page.pop('template__template_path')
p63
I9533
sVurllib.splitquery("a?aa=bb")
p64
I2955
sVg.breadth_first_search('37948')
p65
I6974
sVscrapy.__version__
p66
I16622
sVprod.image
p67
I14328
sVpt.select()
p68
I15149
sVurlopen(r).read()
p69
I21174
sVt = Template("""{% for key, items in data.items %}\u000a<h2>{{ key }}</h2>\u000a<ul>\u000a{% for item in items %}\u000a<li>{{ item }}</li>\u000a{% endfor %}\u000a</ul>{% endfor %}""")
p70
I21051
sVtr= Template('{{ cms_fragment.contents.backgroundImage.image.url|thumbnail:"567x187" }}')
p71
I10023
sVr.match(page_value)
p72
I2247
sVItem.objects.set_language('es')[:1][0]
p73
I11096
sVo.parse('a 10')
p74
I7229
sVa.insert(-1, "p")
p75
I2538
sVassert(a['b'])
p76
I11513
sVurllib.unquote(a)
p77
I10363
sVdata = 'session%5Bpassword%5D=pass%28twitter%29.7&authenticity_token=7a0b2e11335fdc0a621c4b64babd251b986a065c&oauth_token=RTqrcFfXqDqR35ZO9rEAPCkFYen8FoWlHog5uAom3vA&session%5Busername_or_email%5D=social_auth'
p78
I21105
sVbot.password
p79
I4378
sVopener = urllib2.build_opener()
p80
I7846
sVv = "hola mundo como <a href='http://google.com'><img src='hdai'></a> va todo?"
p81
I9856
sVa = 'aaaa'
p82
I294
sVx.get('k', False)
p83
I18209
sVtmp
p84
I1920
sVo = N('ttp') + V('id') + N('as') + V('as') + O(N('and') + V('32'))
p85
I7214
sV*){@}]+}&)[(^^(*$&_$@#[#_$)^_()}{[]]{^@*)_!{@)(!))^_+_]{+_}$%(@#+{*+%@!${*&&@${]
p86
I12925
sVreduce(or_, a)
p87
I18593
sVset = FSet()
p88
I14420
sVa = 'aaa'
p89
I20595
sVItem.translations
p90
I17844
sVc = CategoryHierarchy.objects.all(pk=129)
p91
I4603
sVsimplejson.dumps(a)
p92
I19425
sVF.base_fields
p93
I718
sVexcept ConfigParser.NoOptionError, e:
p94
I16555
sVs.terminate()
p95
I16020
sVtry:\u000a    a['pepe']\u000aexcept KeyError, e:\u000a    print dir(e)
p96
I6787
sVpurple = dbus.Interface(obj, "im.pidgin.purple.PurpleInterface")
p97
I1428
sVurllib2.urlopen("http://google.com/").read()
p98
I2989
s.