hex(10)
hex(10)[:2]
hex(10)[2:]
a = ''
a.split(',')
x = "0; url='http://www.google.com.uy/accounts/SetSID?ssdc=1&sidt=ALWU2ctT7NxmarJTa5qSIxJI2OjAtXJxs%2FaCH6IVFqM746kLFUHmF6sDzXRnpByS6U6zWiJDxwx77UW%2BVd6GXKI0uTEhoiqk5Ywh2prFSNHJdzTh23G%2BQB2w633ntEQdc%2F2HxURh6uwtnRWTdDjIUlTQnhIS6usJNenCFJf0uppCn6SewqurtUGA%2Fva7Qdyz7bQv1CyeUIrqbA6hykiAV%2BFYXqp27HvPwuJVOZ1NoIAFPtTYtpxrHoEO9YkrMBw2Vb2ADgmGELVgU07mehlSUWIHUzA6Mxw53e2gkoBeVt7Moks3boMldy0USgKR3wLUBoB2EiPPhlajJlAsfyhBekDt7lyimirS%2FqCFNyJXuIzfM%2BLQbn0uKcM%3D&continue=https%3A%2F%2Fwww.google.com%2Faccounts%2FServiceLogin%3Fpassive%3Dtrue%26go%3Dtrue%26continue%3Dhttps%253A%252F%252Faccounts.google.com%252Fo%252Fopenid2%252Fauth%253Fst%253DxjRmmZP0dUybPmX-EP8R%2526hl%253Des%2526from_login%253D1%26followup%3Dhttps%253A%252F%252Faccounts.google.com%252Fo%252Fopenid2%252Fauth%253Fst%253DxjRmmZP0dUybPmX-EP8R%2526hl%253Des%2526from_login%253D1%26hl%3Des%26shdf%3DChYLEgZkb21haW4aClRlc3RzZXJ2ZXIMEgNsc28iFKzpAoeVF5LfJ60Wl5Ft6YT-wowxKAEyFM7_GRzE19-LovBgKeG4IwBvYM8j%26service%3Dlso%26fss%3D1'"
improt re
import re
REFRESH_RE = re.compile(r'\d;\s*url=')
REFRESH_RE.sub?
REFRESH_RE.sub('', x)
x = local()
from threading import local
x = local()
x['x'] = 1
a = [1, 2]
l = 3
a += [None for x in range(l - len(a))]
a
a += [None for x in range(l - len(a))]
a
p = Post.objects.all()[0]
n = Notice(content_object=p)
n
from django.db.models.query import Q
Poll
Poll._meta.fields
[(f.name, f) for f in Poll._meta.fields]
u = User.objects.get(username='kevin.tran@obnob.com')
u = User.objects.get(username='kevin.tran')
g = Group.objects.get(slug='group_1')
from django.db.models.query import Q
Poll.author
Poll.objects.filter(Q(author=u, group=g))
qs = Poll.objects.filter(Q(author=u, group=g))
def as_sql(qs):
    from django.db.models.sql import compiler
    from django.db import connection
    c = compiler.SQLCompiler(qs.query, connection, qs._db)
    a, b = c.as_sql()
    return a % b
as_sql(qs)
ct = ContentType.objects.get_for_model(Poll)
ct.model_class
ct.model_class()
from datetime import datetime, timedelta
timedelta?
timedelta(7)
d = timedelta(7)
t = datetime.now()
t - d
t > (t - d)
t >= (t - d)
a = "facet=supplier_id,77&"
len(a * 50)
Thread
qs = Thread.objects.all()
qs2 = ThreadedComment.objects.filter(object_id__in=qs, content_type=ContentType.objects.get_for_model(Thread))
from django.db.models.sql import compiler
from django.db import connection
c = compiler.SQLCompiler(qs.query, connection, qs._db)
a, b = c.as_sql()
print a % b
c = compiler.SQLCompiler(qs2.query, connection, qs2._db)
print a % b
qs = Thread.objects.all()
qs2 = ThreadedComment.objects.filter(object_id__in=qs, content_type=ContentType.objects.get_for_model(Thread))
c = compiler.SQLCompiler(qs2.query, connection, qs2._db)
a, b = c.as_sql()
print a % b
from obnob.apps.topic_board.models import Thread
Thread
qs = Thread.objects.all()
qs2 = ThreadedComment.objects.filter(object_id__in=qs, content_type=ContentType.objects.get_for_model(Thread))
c = compiler.SQLCompiler(qs2.query, connection, qs2._db)
a, b = c.as_sql()
print a % b
try:
    a = 1 / 0
except Exception, e:
    print e.message
try:
    a = 1 / 0
except Exception, e:
    print e.messages
e
e.__str__()
e.message
getattr(e, 'message)
getattr(e, 'message')
from social_auth.models import UserSocialAuth
u = UserSocialAuth.objects.all()[0]
u.extra_data
u.extra_data.__class__
u.extra_data['x'] = 'x'
u.extra_data
u.save()
import uuid
uuid.uuid5
uuid.uuid5()
uuid.uuid1()
uuid.uuid3()
uuid.uuid4()
uuid.uuid4?
import uuid
uuid.uuid4()
x = uuid.uuid4()
x
x.
x.hex
x.get_int()
x.get_hex())
len(x.get_hex())
len(uuid4().get_hex())
len(uuid.uuid4().get_hex())
uuid.uuid4().get_hex()
import convert
base
import zbase62
from base64
import base64
base64?
x
base64.encodestring(x.get_hex())
len(base64.encodestring(x.get_hex()))
base64.b64encode?
base64.b64encode('a)
base64.b64encode('a')
base64.b64encode(x.get_hex())
len(base64.b64encode(x.get_hex()))
base64.b32encode(x.get_hex())
import encodings
import 
import snappy
import pysnappy
import snappy
import sys
sys.path
sys.path.append('/home/omab/.virtualenvs/andres/lib/python2.6/site-packages/python_snappy-0.2-py2.6.egg-info/')
import snappy
snappy
snappy.snappy
snappy()
snappy.__path__
from snappy import snappy
import sys
sys.append('/home/omab/.virtualenvs/andres/lib/python2.6/site-packages/')
sys.path.append('/home/omab/.virtualenvs/andres/lib/python2.6/site-packages/')
import snappy
a = {u'first_name': u'Ernesto', u'last_name': u'Ernestino', u'name': u'Ernesto Ernestino', u'locale': u'es_LA', u'gender': u'male', 'expires': '4264', u'email': u'django.social.auth@gmail.com', 'access_token': '141564835905859|2.9kHpvVgV_PHsrIRYxlx2wg__.3600.1301446800-100002200789926|l9e2cavwfOJQzPNHJ1X39I3bZRg', u'link': u'http://www.facebook.com/profile.php?id=100002200789926', u'timezone': -3, u'updated_time': u'2011-03-29T18:09:57+0000', u'id': u'100002200789926'} {'username': u'Ernesto Ernestino', 'fullname': u'Ernesto Ernestino', 'last_name': u'Ernestino', 'email': u'django.social.auth@gmail.com', 'first_name': u'Ernesto'}
a, b = {u'first_name': u'Ernesto', u'last_name': u'Ernestino', u'name': u'Ernesto Ernestino', u'locale': u'es_LA', u'gender': u'male', 'expires': '4264', u'email': u'django.social.auth@gmail.com', 'access_token': '141564835905859|2.9kHpvVgV_PHsrIRYxlx2wg__.3600.1301446800-100002200789926|l9e2cavwfOJQzPNHJ1X39I3bZRg', u'link': u'http://www.facebook.com/profile.php?id=100002200789926', u'timezone': -3, u'updated_time': u'2011-03-29T18:09:57+0000', u'id': u'100002200789926'}, {'username': u'Ernesto Ernestino', 'fullname': u'Ernesto Ernestino', 'last_name': u'Ernestino', 'email': u'django.social.auth@gmail.com', 'first_name': u'Ernesto'}
a
b
from django.utils.simplejson import decoder
decoder?
decoder('{"a": 1}')
from django.utils import simplejson
simplejson.dumps('{"a": 1}')
simplejson.loads('{"a": 1}')
data = """
{
-data: [
-{
name: "Programacion"
category: "Interest"
id: "412839916872"
created_time: "2011-03-29T23:59:20+0000"
}
-{
name: "Astronom√≠a"
category: "Field of study"
id: "103964412973949"
created_time: "2011-03-29T23:59:17+0000"
}
]
}"""
simplejson.loads(data)
%edit
simplejson.loads(data)
data
data = data.split()
data
data = ''.join(data)
simplejson.loads(data)
data
%edit
xxx
%edit
xxx
simplejson.loads(xxx)
simplejson.loads(''.join(xxx.split()))
print xxx
print "matias
print "matias"
%edit
print xxx
simplejson.loads(''.join(xxx.split()))
import urllib
urllib.urlencode('{'timeStmp': '1301620351', 'oauth_callback': 'http://myapp.com:8000/complete/google-oauth/', 'oauth_token': '4/qErPX3pSTmLOMiYvedO7Rpmr-0oj', 'secTok': '.AG5fkS_Y7LquXtNOlYfWN59jdo1bpnVQxA=='}')
urllib.urlencode({'timeStmp': '1301620351', 'oauth_callback': 'http://myapp.com:8000/complete/google-oauth/', 'oauth_token': '4/qErPX3pSTmLOMiYvedO7Rpmr-0oj', 'secTok': '.AG5fkS_Y7LquXtNOlYfWN59jdo1bpnVQxA=='})
import urllib
urllib.urlencode({'a': 'b|c'})
User.objects.order_by('?')[0]
User.objects.order_by('-id')[0]
User.objects.order_by('-id')[0].delete()
UserSocialAuth.objects.all().delete()
Nonce.objects.all().delete()
Association.objects.all()
FileThread.objects.filter(group__in=get_current_user().obnob_groups.all()).order_by('-created_at')
UserSocialAuth.objects.all().delete()
User.objects.order_by('-id')[0].delete()
from django.utils import simplejson
simplejson.JSONDecodeError
from social_auth.models import *
UserSocialAuth?
UserSocialAuth._meta.db_table
ls
ls --color=autho
ls --color=auto
clear
for i in $(ls):
import glob
glob.glob('/*.*')
glob.glob('/*')
import buildbot
from setuptools import find_packages, setup
setup?
from os.path import abspath, dirname, basename, join
dirname()
dirname(__file__)
import os
os.env
import os
os.getcwd()
os.getcwdu()
class Pepe(object):
    def __init__(self, *args, **kwargs):
        self.args = args
        self.kwargs = kwargs
class Pepe(object):
    def __init__(self, *args, **kwargs):
        self.args = args
        self.kwargs = kwargs
    @classmethod
    def as_view(self):
        def func(*args, **kwargs):
            print args, kwargs
        return func
p = Pepe(1, 2, a=1, b=2).as_view()
p
p()
p(1, 2, a=1, b=2)
p
p = Pepe(1, 2, a=1, b=2)
f = p.as_view()
from sys import getrefcount
getrefcount(p)
getrefcount(f)
f
from sys import _getframe
_getframe()
f = _getframe()
f.f_locals
u = User.objects.get(username='kevin.tran')
FileThread.objects.filter(group__in=u.obnob_groups.all()).order_by('-created_at')
FileThread.objects.filter(group__in=u.obnob_groups.select_related('group')all()).order_by('-created_at')
FileThread.objects.filter(group__in=u.obnob_groups.select_related('group').all()).order_by('-created_at')
u.obnob_groups.select_related('group').all()
u.obnob_groups.all()
u.obnob_groups.values('group')
u.obnob_groups.values?
import pkg_resources
pkg_resources.__package__
pkg_resources.__package__.__class__
import this
import random
random.choice?
', '.join(['a', 'b'])
list('a')
list(None)
a = [None or 1]
a
[1 or 2]
48 / 2 * (9+3)
48 / (2 * (9+3))
import time
time.time()
str(time.time())
str(int(time.time()))
time.ctime()
time.time?
time.struct_time?
time.struct_time()
referred_signup_url = u'http://%s%s?ref_key=%%s' % ('google.com', '/a/s/')
referred_signup_url
referred_signup_url % '123'
from django.contrib.auth import get_backends
get_backends()
get_backends()[0
]
b = get_backends()[0
]
b
b.__module__
b = get_backends()[1]
b.__module__
b.__class__.__name__
import operator
operator.ne?
apply(operator.ne, (1, 2, 3))
all(operator.ne, (1, 2, 3))
reduce(operator.ne, (1, 2, 3))
reduce(operator.eq, (1, 2, 3))
import operator
reduce(operator.ne, [1, 2, 3])
reduce(operator.ne, [1, 1, 1])
reduce(operator.ne, [1, 1, 1], [])
reduce(operator.eq, [1, 1, 1], [])
reduce(operator.eq, [1, 1, 1])
reduce?
any(reduce(lambda x, y: x != y, [1, 1, 1]))
any(lambda x, y: x != y, [1, 1, 1])
import urlparse
urlparse?
urlparse.urlunparse?
urlparse.urlunparse('')
urlparse.urlunparse(('http', 'google.com', '/q/')
)
urlparse.urlunparse(('http', 'google.com', '/q/', 'a=1', 'b=1', 'c')
)
urlparse.urlunparse(('http', 'google.com', '/q/', 'a=1', 'b=1', 'c'))
urlparse.urlunparse(('http', 'google.com', '/q/', '', 'b=1', 'c'))
urlparse.urlunparse(('http', 'google.com', '/q/', '', 'b=1', ''))
urlparse.urlunparse(('https', 'google.com', '/q/', '', 'b=1', ''))
urlparse.urlunparse(('https', 'google.com', '/q/', '', {'b': '1'}, ''))
from obnob.apps.helpers.utils import full_url
full_url('account_reset_passwd', query={'reset_key': '123'})
from urllib import urlencode
urlencode({})
from obnob.apps.helpers.utils import full_url
from urllib import urlencode
full_url('account_reset_passwd', query={'reset_key': '123'})
full_url('account_reset_passwd')
full_url('account_reset_passwd', query='a=1')
full_url('account_reset_passwd', query='')
full_url('account_reset_passwd', query=None)
full_url('account_reset_passwd', query={})
from django.contrib.auth.models import User
User.objects.get()
from django.contrib.contenttypes.models import ContentType
ContentType.objects.get()
u = User.objects.get(pk=32)
u.signup_completed_stage
u.signup_completed_stage = u''
u.save()
u = User.objects.get(pk=32)
u.signup_completed_stage = u''
u = User.objects.get(pk=32)
u.signup_completed_stage
u.signup_completed_stage = ''
u.save()
u = User.objects.get(pk=32)
u.signup_completed_stage
u = User.objects.get(pk=32)
u.signup_completed_stage
print u.signup_completed_stage
print '#%s#' % u.signup_completed_stage
u = User()
u.signup_completed_stage
u = User.objects.get(pk=32)
u.signup_completed_stage
u.signup_completed_stage = ''
u.save()
u = User.objects.get(pk=32)
u.save()
u.signup_completed_stage
u.signup_completed_stage = 'E'
u.save()
u = User.objects.get(pk=32)
u.save()
u.signup_completed_stage
u.signup_completed_stage = ''
u.save()
u = User.objects.get(pk=32)
u.signup_completed_stage = ''
u = User.objects.get(pk=32)
u.signup_completed_stage
u = User.objects.get(username='kevin.tran')
u
ChatterboxThread(content_object=u)
c = ChatterboxThread(content_object=u)
c.content_object
c.object_id
c.content_type_id
c.content_object
from django.utils.simplejson import JSONDecodeError
JSONDecodeError.__bases__
from django.utils.simplejson import JSONDecodeError
JSONDecodeError.__bases__
from django import VERSION
print VERSION
from django.utils.simplejson import JSONDecodeError
from django import VERSION
print VERSION
from django.utils.simplejson import JSONDecodeError
print x
irint x
print x
rint "hola"
from django import VERSION
print VERSION
from django import VERSION
print VERSION
from django.utils.simplejson import JSONDecodeError
JSONDecodeError
class X(ValueError)
class X(ValueError):
    pass
try:
    raise X
except ValueError, e:
    print "aca"
print a
